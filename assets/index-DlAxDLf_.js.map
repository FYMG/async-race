{"version":3,"file":"index-DlAxDLf_.js","sources":["../../src/utils/helpers/removeDuplicates.ts","../../src/app/components/baseComponent.ts","../../src/utils/helpers/throwError.ts","../../src/assets/logo-img.png","../../src/utils/consts/text.ts","../../src/utils/helpers/mergeClassLists.ts","../../src/utils/helpers/mergeChildrenLists.ts","../../src/app/components/logo/logoComponent.ts","../../src/app/components/button/buttonComponent.ts","../../src/app/viewsComponents/header/header.ts","../../src/app/viewsComponents/footer/footer.ts","../../src/utils/consts/carBrands.ts","../../src/utils/consts/carModels.ts","../../src/services/api.ts","../../src/app/components/carSetting/carSettingComponent.ts","../../src/assets/flag.png","../../src/utils/car.svg.ts","../../src/app/components/carImage/carImageComponent.ts","../../src/app/components/Car/carComponent.ts","../../src/app/components/loader/loaderComponent.ts","../../src/app/viewsComponents/startPageContent/startPageContent.ts","../../src/app/views/startPage.ts","../../src/app/viewsComponents/winnersPageContent/winnersPageContent.ts","../../src/app/views/winnerPage.ts","../../src/utils/consts/routes.ts","../../src/utils/helpers/getRouteByPath.ts","../../src/services/router.ts","../../src/main.ts"],"sourcesContent":["function removeDuplicates<T>(arr: T[]): T[] {\n    return arr.filter((item, index) => arr.lastIndexOf(item) === index);\n}\n\nexport default removeDuplicates;\n","import removeDuplicates from '@utils/helpers/removeDuplicates';\n\nexport type IProps<T extends HTMLElement = HTMLElement> = Partial<\n    Omit<T, 'style' | 'dataset' | 'classList' | 'children' | 'tagName'>\n> & {\n    [key: PropertyKey]: unknown;\n    tag?: keyof HTMLElementTagNameMap;\n    classList?: TClassList;\n    textContent?: string;\n    children?: TChildren;\n    style?: Partial<CSSStyleDeclaration>;\n};\n\nexport type TClassList = string[] | string;\nexport type TChildren = (BaseComponent | string)[] | string | BaseComponent | undefined;\n\nexport class BaseComponent<T extends HTMLElement = HTMLElement> {\n    protected node: T;\n\n    props: IProps<T>;\n\n    protected children: BaseComponent[] = [];\n\n    protected parent: BaseComponent | null = null;\n\n    public onRoute = () => {};\n\n    constructor(props: IProps<T>) {\n        this.props = props;\n        this.node = this.createNode(props);\n    }\n\n    protected createNode({\n        tag,\n        style,\n        classList,\n        textContent,\n        children,\n        ...props\n    }: IProps<T>): T {\n        this.props = { tag, classList, textContent, children, ...props } as IProps<T>;\n        let node = document.createElement(tag ?? 'div') as T;\n\n        node = Object.assign(node, props);\n\n        if (classList) {\n            this.applyClassList(node, classList);\n        }\n\n        if (textContent) {\n            node.textContent = textContent;\n        }\n\n        if (children) {\n            this.children = this.appendChildrenToNode(node, children);\n        }\n\n        if (style) {\n            Object.entries(style).forEach(([key, value]) => {\n                if (value) {\n                    const stringValue = String(value);\n\n                    node.style.setProperty(key, stringValue);\n                }\n            });\n        }\n\n        this.children = removeDuplicates(this.children).filter((child) =>\n            this.isChild(child),\n        );\n\n        return node;\n    }\n\n    isChild(child: BaseComponent): boolean {\n        return child.parent === this;\n    }\n\n    public appendChildren(children: NonNullable<TChildren>): this {\n        if (Array.isArray(children)) {\n            children.forEach((child) => this.append(child));\n        } else {\n            this.append(children);\n        }\n\n        return this;\n    }\n\n    public append(child: BaseComponent | string): this {\n        const addedNode = this.appendToNode(this.node, child);\n\n        if (addedNode) {\n            this.children.push(addedNode);\n        }\n\n        this.children = removeDuplicates(this.children).filter((item) =>\n            this.isChild(item),\n        );\n\n        return this;\n    }\n\n    public addEventListener<K extends keyof HTMLElementEventMap>(\n        this: this,\n        type: K,\n        listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void,\n        options?: boolean | AddEventListenerOptions | undefined,\n    ): this {\n        this.node.addEventListener(type, listener, options);\n\n        return this;\n    }\n\n    public getNode(): T {\n        return this.node;\n    }\n\n    public getChildren(): BaseComponent[] {\n        return this.children;\n    }\n\n    public addClass(classNameClassName: string): this {\n        this.node.classList.add(classNameClassName);\n\n        return this;\n    }\n\n    public toggleClass(classSurname: string): void {\n        this.node.classList.toggle(classSurname);\n    }\n\n    public removeClass(className: string): void {\n        this.node.classList.remove(className);\n    }\n\n    public destroy(): void {\n        this.parent?.removeChildren(this);\n        this.children.forEach((child) => child.destroy());\n        this.node.remove();\n    }\n\n    private applyClassList(node: T, classList: TClassList): void {\n        if (typeof classList === 'string') {\n            node.classList.add(classList);\n        } else {\n            node.classList.add(...classList);\n        }\n    }\n\n    private appendChildrenToNode(\n        node: T,\n        children: NonNullable<TChildren>,\n    ): BaseComponent[] | [] {\n        const result: BaseComponent[] = [];\n\n        if (Array.isArray(children)) {\n            children.forEach((child) => {\n                const addedNode = this.appendToNode(node, child);\n\n                if (addedNode) {\n                    result.push(addedNode);\n                }\n            });\n        } else {\n            const addedNode = this.appendToNode(node, children);\n\n            if (addedNode !== undefined) {\n                result.push(addedNode);\n            }\n        }\n\n        return result;\n    }\n\n    private appendToNode(node: T, child: BaseComponent | string): BaseComponent | void {\n        if (typeof child === 'string') {\n            node.append(document.createTextNode(child));\n\n            return undefined;\n        }\n\n        child.parent?.removeChildren(child);\n        child.parent = this;\n        node.append(child.node);\n\n        return child;\n    }\n\n    public haveChildren(child: BaseComponent): boolean {\n        return this.children.some((item) => item.getNode().isEqualNode(child.getNode()));\n    }\n\n    public haveChildrenNode(node: Element): boolean {\n        return Array.from(this.node.children).some((item) => item.isEqualNode(node));\n    }\n\n    public isNode(node: Element) {\n        return this.node.isEqualNode(node);\n    }\n\n    public replaceWith(component: BaseComponent<T>): this {\n        if (this.parent) {\n            this.parent.children.filter(\n                (item) => !item.getNode().isEqualNode(component.getNode()),\n            );\n            this.parent = component.parent;\n        }\n\n        if (component.parent) {\n            component.parent.children.filter(\n                (item) => !item.getNode().isEqualNode(this.getNode()),\n            );\n            component.parent = this.parent;\n        }\n\n        [this.node, component.node] = [component.node, this.node];\n        this.node.replaceWith(component.node);\n\n        return this;\n    }\n\n    public removeChildren(child: BaseComponent): this {\n        child.getNode().remove();\n        this.children = this.children.filter(\n            (item) => !item.getNode().isEqualNode(child.getNode()),\n        );\n        child.parent = null;\n\n        return this;\n    }\n\n    public remove() {\n        this.getNode().remove();\n    }\n\n    componentDidMount(callback: (elem: this) => void): this {\n        new Promise((resolve) => {\n            const observer = new MutationObserver((_, obs) => {\n                if (this.node) {\n                    resolve(this);\n                    obs.disconnect();\n                }\n            });\n\n            observer.observe(document.body, { childList: true, subtree: true });\n        })\n            .then(() => callback(this))\n            .catch((err) => console.error(err));\n\n        return this;\n    }\n}\n\nexport type FunctionComponent<\n    ElementType extends HTMLElement = HTMLElement,\n    AdditionalProps = Record<PropertyKey, unknown>,\n    BaseComponentType extends BaseComponent<ElementType> = BaseComponent<ElementType>,\n> = (props: IProps<ElementType> & AdditionalProps) => BaseComponentType;\nconst createComponent = <ElementType extends HTMLElement = HTMLElement>(\n    props: IProps<ElementType>,\n) => new BaseComponent<ElementType>(props);\n\nexport default createComponent;\n","const throwError = (message: string) => {\n    throw new Error(message);\n};\n\nexport default throwError;\n","export default \"__VITE_ASSET__BtPjOiYZ__\"","enum TextStrings {\n    siteName = 'Bear racing',\n    footerText = `Â© 2024 ${siteName}.`,\n}\n\nexport default TextStrings;\n","const mergeClassLists = (...classLists: (string | string[] | undefined)[]): string[] => {\n    const result: string[] = [];\n\n    classLists.forEach((item) => {\n        if (typeof item === 'string') {\n            result.push(item);\n        }\n\n        if (Array.isArray(item)) {\n            result.push(...item);\n        }\n    });\n\n    return result;\n};\n\nexport default mergeClassLists;\n","import { TChildren } from '@components/baseComponent.ts';\n\nconst mergeChildrenLists = (...classLists: TChildren[]): TChildren => {\n    const result: NonNullable<TChildren> = [];\n\n    classLists.forEach((item) => {\n        if (Array.isArray(item)) {\n            result.concat(item);\n        } else if (item !== undefined) {\n            result.push(item);\n        }\n    });\n\n    return result;\n};\n\nexport default mergeChildrenLists;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport logo from '@assets/logo-img.png';\nimport TextStrings from '@utils/consts/text';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport style from './logo.module.scss';\n\nconst logoComponent: FunctionComponent = ({ classList, children, ...props }) => {\n    const logoImg = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: style['site-logo__img'],\n        src: logo,\n        alt: `logo ${TextStrings.siteName}`,\n    });\n\n    const logoText = createComponent<HTMLSpanElement>({\n        tag: 'span',\n        classList: style['site-logo__text'],\n        textContent: TextStrings.siteName,\n    });\n\n    return createComponent({\n        tag: 'a',\n        classList: mergeClassLists(style['site-logo'], classList),\n        children: mergeChildrenLists(logoImg, logoText, children),\n        ...props,\n    });\n};\n\nexport default logoComponent;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from './button.module.scss';\n\nconst buttonComponent: FunctionComponent<HTMLButtonElement> = ({\n    classList,\n    children,\n    ...props\n}) =>\n    createComponent({\n        tag: 'button',\n        classList: mergeClassLists(style['button'], classList),\n        children,\n        ...props,\n    });\n\nexport default buttonComponent;\n","import createComponent from '@components/baseComponent';\nimport logoComponent from '@components/logo/logoComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport { useRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport buttonComponent from '@components/button/buttonComponent';\nimport style from './header.module.scss';\n\nconst header: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const { route, routeInfo } = useRouter();\n\n    const logo = logoComponent({}).addEventListener('click', () =>\n        route(Routes.startPage),\n    );\n\n    const winners = buttonComponent({\n        textContent: 'Winners',\n    }).addEventListener('click', () => {\n        if (routeInfo().path === Routes.startPage.path) {\n            route(Routes.winners);\n            winners.getNode().textContent = 'Garage';\n        } else {\n            winners.getNode().textContent = 'Winners';\n            route(Routes.startPage);\n        }\n    });\n\n    const content = createComponent<HTMLDivElement>({\n        tag: 'div',\n        classList: style['header__content'],\n        children: [logo, winners],\n    });\n\n    return createComponent({\n        tag: 'header',\n        classList: mergeClassLists(style['header'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    });\n};\n\nexport default header;\n","import createComponent from '@components/baseComponent.ts';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport TextStrings from '@utils/consts/text';\nimport style from './footer.module.scss';\n\nconst footer: typeof createComponent<HTMLDivElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const content = createComponent<HTMLElement>({\n        tag: 'div',\n        classList: style['footer__content'],\n        children: [createComponent({ tag: 'p', textContent: TextStrings.footerText })],\n    });\n\n    return createComponent({\n        tag: 'footer',\n        classList: mergeClassLists(style['footer'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    });\n};\n\nexport default footer;\n","const carBrands: readonly string[] = [\n    'Audi',\n    'BMW',\n    'Ford',\n    'Geely',\n    'Haval',\n    'Honda',\n    'Hyundai',\n    'Kia',\n    'Lada',\n    '(ÐÐÐ)',\n    'Mazda',\n    'Mercedes-Benz',\n    'Mitsubishi',\n    'Nissan',\n    'Renault',\n    'Skoda',\n    'Toyota',\n    'Volkswagen',\n    'Acura',\n    'Daihatsu',\n    'Datsun',\n    'Honda',\n    'Infiniti',\n    'Isuzu',\n    'Lexus',\n    'Mazda',\n    'Mitsubishi',\n    'Nissan',\n    'Scion',\n    'Subaru',\n    'Suzuki',\n    'Toyota',\n];\n\nexport default carBrands;\n","const carBrands: readonly string[] = [\n    'M5',\n    'X5',\n    'X6',\n    'X7',\n    'Super',\n    'Model 1',\n    'Model 3',\n    'Model S',\n    'Model X',\n    'Model Y',\n    'Model T',\n];\n\nexport default carBrands;\n","import throwError from '@utils/helpers/throwError';\nimport { ICrateCarRequest, ICrateCarResponse } from '@models/raceApi/post/ICreateCar';\nimport { IGetCarsQueryParams, IGetCarsResponse } from '@models/raceApi/get/IGetCars';\nimport { IGetCarResponse } from '@models/raceApi/get/IGetCar';\nimport ICarModel from '@models/ICarModel';\nimport carBrands from '@utils/consts/carBrands';\nimport carModels from '@utils/consts/carModels';\nimport {\n    IPatchEngineResponse,\n    IPatchEngineResponseDrive,\n} from '@models/raceApi/patch/IPatchEngine';\nimport { IWinnerModel } from '@models/IWinnerModel.ts';\n\nenum HttpMethod {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n    PATCH = 'PATCH',\n}\n\ninterface IUrlParams {\n    [key: string]: unknown;\n    readonly sources?: string;\n}\n\ninterface IHeaders {\n    readonly 'X-Total-Count'?: string;\n}\n\ninterface ILoadProps<\n    ResponseType,\n    RequestBody = NonNullable<unknown>,\n    UrlParams extends IUrlParams = NonNullable<unknown>,\n> {\n    readonly method: HttpMethod;\n    readonly endpoint: string;\n    readonly callback?: LoadCallback<ResponseType>;\n    readonly errorCallback?: LoadErrorCallback;\n    body?: RequestBody | NonNullable<unknown>;\n    urlParams?: UrlParams | NonNullable<unknown>;\n    readonly headers?: IHeaders;\n}\n\ninterface IBaseRespProps<\n    ResponseBody = NonNullable<unknown>,\n    RequestBody = NonNullable<unknown>,\n    UrlParams extends IUrlParams = NonNullable<unknown>,\n> {\n    endpoint: string;\n    callback?: LoadCallback<ResponseBody>;\n    errorCallback?: LoadErrorCallback;\n    headers?: IHeaders;\n    body?: RequestBody | NonNullable<unknown>;\n    urlParams?: UrlParams | NonNullable<unknown>;\n}\n\ntype GerRespProps<\n    ResponseBody,\n    UrlParams extends IUrlParams = NonNullable<unknown>,\n> = Omit<IBaseRespProps<ResponseBody, NonNullable<unknown>, UrlParams>, 'body'>;\n\ntype LoadCallback<ResponseType> = (data: ResponseType, headers: Headers) => void;\ntype LoadErrorCallback = (data: Response) => void;\n\nenum Endpoints {\n    garage = '/garage',\n    engine = '/engine',\n    winners = '/winners',\n}\n\nenum EngineStatuses {\n    started = 'started',\n    stopped = 'stopped',\n    drive = 'drive',\n}\n\nclass RaceApi {\n    private static instance: RaceApi;\n\n    private static baseUrl = 'http://localhost:3000';\n\n    public static create(baseUrl?: string): RaceApi {\n        if (RaceApi.instance) {\n            throwError('RaceApi Provider already created');\n        }\n\n        if (baseUrl) {\n            RaceApi.baseUrl = baseUrl;\n        }\n\n        RaceApi.instance = new RaceApi();\n\n        return RaceApi.instance;\n    }\n\n    static getIsInitialized() {\n        return !!RaceApi.instance;\n    }\n\n    static getInstance() {\n        return RaceApi.instance;\n    }\n\n    private headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n    };\n\n    public getResp<ResponseType, UrlParams extends IUrlParams = NonNullable<unknown>>({\n        endpoint,\n        urlParams = {},\n        headers = {},\n        callback,\n    }: GerRespProps<ResponseType, IUrlParams & UrlParams>) {\n        this.load<ResponseType>({\n            method: HttpMethod.GET,\n            endpoint,\n            headers,\n            callback,\n            urlParams,\n        });\n    }\n\n    public deleteResp<ResponseType, UrlParams>({\n        endpoint,\n        urlParams = {},\n        headers = {},\n        callback = () => {},\n    }: IBaseRespProps<ResponseType, IUrlParams & UrlParams>) {\n        this.load<ResponseType>({\n            method: HttpMethod.DELETE,\n            endpoint,\n            headers,\n            callback,\n            urlParams,\n        });\n    }\n\n    public postResp<\n        ResponseType = NonNullable<unknown>,\n        RequestType = NonNullable<unknown>,\n        UrlParams extends IUrlParams = NonNullable<unknown>,\n    >({\n        endpoint,\n        callback,\n        errorCallback = () => {},\n        body = {},\n        urlParams = {},\n    }: IBaseRespProps<ResponseType, RequestType, UrlParams>) {\n        this.load<ResponseType, RequestType>({\n            method: HttpMethod.POST,\n            endpoint,\n            callback,\n            errorCallback,\n            urlParams,\n            body,\n        });\n    }\n\n    public patchResp<\n        ResponseType = NonNullable<unknown>,\n        RequestType = NonNullable<unknown>,\n        UrlParams extends IUrlParams = NonNullable<unknown>,\n    >({\n        endpoint,\n        callback,\n        errorCallback = () => {},\n        body = {},\n        urlParams = {},\n    }: IBaseRespProps<ResponseType, RequestType, UrlParams>) {\n        this.load<ResponseType, RequestType>({\n            method: HttpMethod.PATCH,\n            endpoint,\n            callback,\n            errorCallback,\n            urlParams,\n            body,\n        });\n    }\n\n    public putResp<\n        ResponseType = Record<PropertyKey, never>,\n        RequestType = Record<PropertyKey, never>,\n        UrlParams extends IUrlParams = IUrlParams,\n    >({\n        endpoint,\n        callback,\n        body = {},\n        urlParams = {},\n    }: IBaseRespProps<ResponseType, RequestType, UrlParams>) {\n        this.load<ResponseType, RequestType>({\n            method: HttpMethod.PUT,\n            endpoint,\n            callback,\n            urlParams,\n            body,\n        });\n    }\n\n    private async errorHandler(\n        res: Response,\n        errorCallback: LoadErrorCallback = () => {},\n    ): Promise<Response> {\n        if (!res.ok) {\n            errorCallback(res);\n        }\n\n        return res;\n    }\n\n    private makeUrl<UrlParams = IUrlParams>(\n        options: IUrlParams & UrlParams,\n        endpoint: string,\n    ) {\n        const urlOptions = options;\n\n        let url = `${RaceApi.baseUrl}${endpoint}?`;\n\n        Object.keys(urlOptions).forEach((key) => {\n            url += `${key}=${String(urlOptions[key])}&`;\n        });\n\n        return url.slice(0, -1);\n    }\n\n    private load<ResponseType, RequestType = Record<string, never>>({\n        method,\n        endpoint,\n        callback,\n        errorCallback = () => {},\n        body,\n        urlParams = {},\n        headers = {},\n    }: ILoadProps<ResponseType, RequestType>) {\n        fetch(this.makeUrl(urlParams, endpoint), {\n            method,\n            headers: { ...this.headers, ...headers },\n            body: method !== HttpMethod.GET ? JSON.stringify(body ?? {}) : undefined,\n        })\n            .then((res: Response) => this.errorHandler(res, errorCallback))\n            .then(\n                async (\n                    res: Response,\n                ): Promise<{ data: ResponseType; ResponseHeaders: Headers }> => {\n                    let data: ResponseType;\n\n                    try {\n                        data = (await res.json()) as ResponseType;\n                    } catch (err) {\n                        data = {} as ResponseType;\n                    }\n\n                    return {\n                        data,\n                        ResponseHeaders: res.headers,\n                    };\n                },\n            )\n            .then(({ data, ResponseHeaders }) => callback?.(data, ResponseHeaders))\n            .catch((err: Error) => {\n                throw err;\n            });\n    }\n\n    public createCar(\n        name: string,\n        color: string,\n        callback?: LoadCallback<ICrateCarResponse>,\n    ) {\n        return new Promise((resolve: (data: ICrateCarResponse) => void, reject) => {\n            this.postResp<ICrateCarResponse, ICrateCarRequest>({\n                endpoint: Endpoints.garage,\n                callback: (data, headers) => {\n                    resolve(data);\n                    callback?.(data, headers);\n                },\n                errorCallback: reject,\n                body: {\n                    name,\n                    color,\n                },\n            });\n        });\n    }\n\n    public getCars(\n        page: number,\n        limit: number,\n        callback: LoadCallback<IGetCarsResponse>,\n    ) {\n        this.getResp<IGetCarsResponse, IGetCarsQueryParams>({\n            endpoint: Endpoints.garage,\n            urlParams: {\n                _page: page,\n                _limit: limit,\n            },\n            callback,\n        });\n    }\n\n    public engineStop(id: number, callback?: (data: IPatchEngineResponse) => void) {\n        this.patchResp({\n            endpoint: `${Endpoints.engine}`,\n            urlParams: {\n                id,\n                status: EngineStatuses.stopped,\n            },\n            callback,\n        });\n    }\n\n    public engineStart(id: number, callback?: (data: IPatchEngineResponse) => void) {\n        this.patchResp({\n            endpoint: `${Endpoints.engine}`,\n            urlParams: {\n                id,\n                status: EngineStatuses.started,\n            },\n            callback,\n        });\n    }\n\n    public engineDrive(id: number, callback?: (data: IPatchEngineResponseDrive) => void) {\n        this.patchResp({\n            endpoint: `${Endpoints.engine}`,\n            urlParams: {\n                id,\n                status: EngineStatuses.drive,\n            },\n            callback,\n            errorCallback: (data) => {\n                if (data.status === 500) {\n                    callback?.({\n                        success: false,\n                    });\n                }\n            },\n        });\n    }\n\n    public getCar(id: number, callback: LoadCallback<IGetCarResponse>) {\n        this.getResp<IGetCarResponse>({\n            endpoint: `${Endpoints.garage}/${id}`,\n            callback,\n        });\n    }\n\n    public deleteCar(id: number, callback?: () => void) {\n        this.deleteResp({\n            endpoint: `${Endpoints.garage}/${id}`,\n            urlParams: {\n                id,\n            },\n            callback,\n        });\n        this.deleteWinner(id);\n    }\n\n    public getWinner(\n        id: number,\n        callback: LoadCallback<IWinnerModel>,\n        errorCallback?: (res: Response) => void,\n    ) {\n        this.getResp<IWinnerModel>({\n            endpoint: `${Endpoints.winners}/${id}`,\n            callback,\n            errorCallback,\n        });\n    }\n\n    public createWinner(\n        id: number,\n        time: number,\n        callback?: (data: IWinnerModel) => void,\n        errorCallback?: (res: Response) => void,\n    ) {\n        this.postResp({\n            endpoint: `${Endpoints.winners}`,\n            body: {\n                id,\n                time,\n                wins: 1,\n            },\n            callback,\n            errorCallback,\n        });\n    }\n\n    public getWinners({\n        page,\n        limit,\n        sort,\n        order,\n        callback,\n    }: {\n        page: number;\n        limit: number;\n        sort: 'id' | 'wins' | 'time';\n        order: 'ASC' | 'DESC';\n        callback: (data: IWinnerModel[], headers: Headers) => void;\n    }) {\n        this.getResp<IWinnerModel[]>({\n            endpoint: Endpoints.winners,\n            urlParams: {\n                _page: page,\n                _limit: limit,\n                _sort: sort,\n                _order: order,\n            },\n            callback,\n        });\n    }\n\n    public deleteWinner(id: number, callback?: () => void) {\n        this.deleteResp({\n            endpoint: `${Endpoints.winners}/${id}`,\n            callback,\n        });\n    }\n\n    public updateWinner(\n        id: number,\n        time: number,\n        wins: number,\n        callback?: (data: IWinnerModel) => void,\n    ) {\n        this.putResp({\n            endpoint: `${Endpoints.winners}/${id}`,\n            body: {\n                wins,\n                time,\n            },\n            callback,\n        });\n    }\n\n    public generateCars(count: number, callback: (data: ICarModel[]) => void) {\n        const cars: Promise<ICarModel>[] = [];\n\n        for (let i = 0; i < count; i += 1) {\n            cars.push(\n                this.createCar(\n                    `${carBrands[Math.floor(Math.random() * carBrands.length)]} ${carModels[Math.floor(Math.random() * carModels.length)]}` ??\n                        'Moscvich ultimate',\n                    `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n                ),\n            );\n        }\n\n        void Promise.all(cars).then(callback);\n    }\n\n    public updateCar(\n        id: number,\n        name: string,\n        color: string,\n        callback: LoadCallback<ICarModel>,\n    ) {\n        this.putResp<ICarModel, Omit<ICarModel, 'id'>>({\n            endpoint: `${Endpoints.garage}/${id}`,\n            callback,\n            body: {\n                name,\n                color,\n            },\n        });\n    }\n}\n\nexport const useRaceApi = () => {\n    if (!RaceApi.getInstance()) {\n        throwError('RaceApi Provider not created');\n    }\n\n    const raceApi = RaceApi.getInstance();\n\n    return {\n        updateWinner: raceApi.updateWinner.bind(raceApi),\n        getWinner: raceApi.getWinner.bind(raceApi),\n        createWinner: raceApi.createWinner.bind(raceApi),\n        getWinners: raceApi.getWinners.bind(raceApi),\n        engineStop: raceApi.engineStop.bind(raceApi),\n        engineStart: raceApi.engineStart.bind(raceApi),\n        engineDrive: raceApi.engineDrive.bind(raceApi),\n        generateCars: raceApi.generateCars.bind(raceApi),\n        updateCar: raceApi.updateCar.bind(raceApi),\n        deleteCar: raceApi.deleteCar.bind(raceApi),\n        getCar: raceApi.getCar.bind(raceApi),\n        createCar: raceApi.createCar.bind(raceApi),\n        getCars: raceApi.getCars.bind(raceApi),\n        isInitialized: RaceApi.getIsInitialized(),\n    };\n};\n\nexport const createRaceApiProvider = () => {\n    RaceApi.create();\n\n    return useRaceApi();\n};\n","import createComponent, {\n    BaseComponent,\n    FunctionComponent,\n    IProps,\n} from '@components/baseComponent.ts';\nimport style from '@viewsComponents/startPageContent/startPageContent.module.scss';\nimport { useRaceApi } from '@services/api.ts';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport ICarModel from '@models/ICarModel';\nimport { CarComponent } from '@components/Car/carComponent';\n\nexport class CarSettingComponent extends BaseComponent<HTMLDivElement> {\n    private nameComponent: BaseComponent<HTMLInputElement>;\n\n    private colorComponent: BaseComponent<HTMLInputElement>;\n\n    private car?: ICarModel;\n\n    private carComponent: CarComponent | null = null;\n\n    constructor(\n        colorComponent: BaseComponent<HTMLInputElement>,\n        nameComponent: BaseComponent<HTMLInputElement>,\n        props: IProps,\n    ) {\n        super(props);\n        this.colorComponent = colorComponent;\n        this.nameComponent = nameComponent;\n    }\n\n    public update(callback?: (data: ICarModel) => void) {\n        if (!this.car) {\n            return;\n        }\n\n        void useRaceApi().updateCar(\n            this.car.id,\n            this.nameComponent.getNode().value,\n            this.colorComponent.getNode().value,\n            (data) => {\n                callback?.(data);\n                this.carComponent?.setCar(data);\n            },\n        );\n    }\n\n    public selectCar(car: ICarModel, carComponent: CarComponent) {\n        this.car = car;\n        this.carComponent = carComponent;\n        this.nameComponent.getNode().value = car.name;\n        this.colorComponent.getNode().value = car.color;\n    }\n}\nconst carSettingComponent: FunctionComponent<\n    HTMLDivElement,\n    { edit: boolean; update?: () => void },\n    CarSettingComponent\n> = ({ classList, edit, update, ...props }) => {\n    const colorComponent = createComponent<HTMLInputElement>({\n        tag: 'input',\n        classList: style['create-car__color'],\n        value: 'red',\n        type: 'color',\n    });\n\n    const nameComponent = createComponent<HTMLInputElement>({\n        tag: 'input',\n        classList: style['create-car__name'],\n        value: 'Tesla',\n        type: 'text',\n    });\n\n    const component = new CarSettingComponent(colorComponent, nameComponent, {\n        tag: 'div',\n        classList: mergeClassLists(style['create-car']),\n        children: [\n            colorComponent,\n            nameComponent,\n            createComponent<HTMLButtonElement>({\n                tag: 'button',\n                classList: style['create-car__button'],\n                textContent: edit ? 'Update car' : 'Create car',\n            }).addEventListener('click', () => {\n                if (edit) {\n                    component.update();\n                } else {\n                    void useRaceApi()\n                        .createCar(\n                            nameComponent.getNode().value,\n                            colorComponent.getNode().value,\n                        )\n                        .then((data) => {\n                            update?.();\n\n                            return data;\n                        });\n                }\n            }),\n        ],\n        ...props,\n    });\n\n    return component;\n};\n\nexport default carSettingComponent;\n","export default \"__VITE_ASSET__CaATmDF7__\"","const carSvg = `<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n<svg class=\"car\" height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\\t viewBox=\"0 0 512 512\" xml:space=\"preserve\">\n<path class=\"car__body\" style=\"fill:#FD6144;\" d=\"M466.201,218.011c0-0.011-39.463-13.166-39.463-13.166c-8.811-2.926-19.242-12.209-23.203-20.604\n\\tl-34.703-73.751c-7.899-16.8-29.561-30.54-48.128-30.54H146.286c-18.567,0-44.167,11.061-56.894,24.587l-77.824,82.685\n\\tC5.21,193.986,0,207.107,0,216.39v105.945c0,18.567,15.191,33.758,33.758,33.758h448.838c16.17,0,29.403-15.191,29.403-33.758\n\\tv-40.802L466.201,218.011z M46.361,199.511l67.618-71.838c6.38-6.785,22.989-13.965,32.307-13.965h174.418\n\\tc5.536,0,15.236,6.155,17.588,11.163l34.703,74.639H46.361z\"/>\n<g>\n\\t<path style=\"fill:#B8DE6F;\" d=\"M133.548,280.137c41.95,0,75.956,34.006,75.956,75.956s-34.006,75.956-75.956,75.956\n\\t\\ts-75.956-34.006-75.956-75.956S91.597,280.137,133.548,280.137z\"/>\n\\t<path style=\"fill:#B8DE6F;\" d=\"M378.452,280.137c41.95,0,75.956,34.006,75.956,75.956s-34.006,75.956-75.956,75.956\n\\t\\ts-75.956-34.006-75.956-75.956S336.502,280.137,378.452,280.137z\"/>\n</g>\n<g>\n\\t<path style=\"fill:#FFFFFF;\" d=\"M133.548,325.148c17.07,0,30.945,13.886,30.945,30.945s-13.875,30.945-30.945,30.945\n\\t\\tc-17.059,0-30.945-13.886-30.945-30.945S116.488,325.148,133.548,325.148z\"/>\n\\t<path style=\"fill:#FFFFFF;\" d=\"M378.452,325.148c17.059,0,30.945,13.886,30.945,30.945s-13.886,30.945-30.945,30.945\n\\t\\tc-17.07,0-30.945-13.886-30.945-30.945S361.382,325.148,378.452,325.148z\"/>\n\\t<path style=\"fill:#FFFFFF;\" d=\"M206.803,113.709v85.802H46.361l67.618-71.838c6.38-6.785,22.989-13.965,32.307-13.965H206.803z\"/>\n</g>\n<path style=\"fill:#CFF2F2;\" d=\"M338.291,124.872l34.703,74.639H206.803v-85.802h113.9\n\\tC326.24,113.709,335.94,119.864,338.291,124.872z\"/>\n<path style=\"fill:#FECA72;\" d=\"M466.213,218.011C491.396,226.405,512,254.987,512,281.533c-26.658,0-48.263-21.605-48.263-48.263\n\\tC463.737,227.936,464.603,222.816,466.213,218.011z\"/>\n</svg>`;\n\nexport default carSvg;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport carSvg from '@utils/car.svg';\nimport ICarModel from '@models/ICarModel';\nimport MergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from './carImageComponent.module.scss';\n\nconst carImageComponent: FunctionComponent<HTMLElement, { carObj: ICarModel }> = ({\n    classList,\n    carObj,\n}) => {\n    const car = createComponent<HTMLElement>({\n        tag: 'div',\n        classList: MergeClassLists(style['car-image'], classList),\n        textContent: 'start',\n    });\n\n    car.getNode().innerHTML = carSvg;\n    car\n        .getNode()\n        .querySelector('svg')\n        ?.classList.add(style['car-image__svg'] ?? 'car-image__svg');\n    const carBody: HTMLElement | null = car.getNode().querySelector('.car__body');\n\n    carBody?.style.setProperty('fill', carObj.color);\n\n    return car;\n};\n\nexport default carImageComponent;\n","import createComponent, {\n    BaseComponent,\n    FunctionComponent,\n    IProps,\n} from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport { useRaceApi } from '@services/api';\nimport { CarSettingComponent } from '@components/carSetting/carSettingComponent';\nimport flagImg from '@assets/flag.png';\n\nimport { IPatchEngineResponse } from '@models/raceApi/patch/IPatchEngine';\nimport ICarModel from '@models/ICarModel.ts';\nimport carImageComponent from '@components/carImage/carImageComponent';\nimport style from './car.module.scss';\n\nexport class CarComponent extends BaseComponent<HTMLDivElement> {\n    private readonly id: number;\n\n    private editComponent: CarSettingComponent;\n\n    private trackCar: BaseComponent | null = null;\n\n    private engineStats: IPatchEngineResponse | null = null;\n\n    private engineStarted = false;\n\n    private animationInterval: ReturnType<typeof setInterval> | null = null;\n\n    private raceCounter = 0;\n\n    public carObj: ICarModel;\n\n    private readonly startButton: BaseComponent<HTMLButtonElement>;\n\n    private readonly driveButton: BaseComponent<HTMLButtonElement>;\n\n    private lastRaceTime: number;\n\n    private readonly winText: BaseComponent<HTMLElement>;\n\n    constructor(carObj: ICarModel, editComponent: CarSettingComponent, props: IProps) {\n        super(props);\n\n        this.id = carObj.id;\n        this.editComponent = editComponent;\n        this.carObj = carObj;\n        this.lastRaceTime = 0;\n\n        this.startButton = createComponent({\n            tag: 'button',\n            classList: style['car__control-button'],\n            textContent: 'start',\n        });\n\n        this.driveButton = createComponent<HTMLButtonElement>({\n            tag: 'button',\n            classList: style['car__control-button'],\n            textContent: 'drive',\n            disabled: true,\n        });\n\n        this.winText = createComponent({\n            tag: 'div',\n            classList: style['car__win-text'],\n            children: [\n                createComponent({\n                    tag: 'span',\n                    textContent: '',\n                }),\n            ],\n        });\n    }\n\n    public engineIsStarted() {\n        return this.engineStarted;\n    }\n\n    render() {\n        this.children.forEach((child) => child.destroy());\n\n        this.driveButton.addEventListener('click', () => {\n            this.drive();\n        });\n\n        this.startButton.addEventListener('click', () => {\n            if (!this.engineStarted) {\n                this.start();\n            } else {\n                this.stop();\n            }\n        });\n\n        const carControlBlock = createComponent({\n            tag: 'div',\n            classList: style['car__control'],\n            children: [\n                createComponent({\n                    tag: 'span',\n                    textContent: this.carObj.name,\n                }),\n                createComponent({\n                    tag: 'button',\n                    classList: style['car__control-button'],\n                    textContent: 'delete',\n                }).addEventListener('click', () => {\n                    useRaceApi().deleteCar(this.id, () => {\n                        this.destroy();\n                    });\n                }),\n                createComponent({\n                    tag: 'button',\n                    classList: style['car__control-button'],\n                    textContent: 'select',\n                }).addEventListener('click', () => {\n                    this.editComponent.selectCar(this.carObj, this);\n                }),\n\n                this.startButton,\n                this.driveButton,\n                this.winText,\n            ],\n        });\n\n        this.append(carControlBlock);\n\n        const trackControlBlock = createComponent({\n            tag: 'div',\n            classList: style['car__track-control'],\n        });\n\n        const trackEnd = createComponent({\n            tag: 'div',\n            classList: style['car__track-end'],\n            children: [\n                createComponent<HTMLImageElement>({\n                    tag: 'img',\n                    classList: style['car__track-end-image'],\n                    src: flagImg,\n                    alt: 'track end flag',\n                }),\n            ],\n        });\n\n        this.trackCar = carImageComponent({\n            carObj: this.carObj,\n            classList: style['car__track-car'],\n        });\n\n        const track = createComponent({\n            tag: 'div',\n            classList: style['car__track'],\n            children: [trackControlBlock, trackEnd, this.trackCar],\n        });\n\n        this.append(track);\n\n        return this;\n    }\n\n    public win() {\n        void useRaceApi().getWinner(this.carObj.id, (data) => {\n            if (!data.id) {\n                console.log('create winner');\n                useRaceApi().createWinner(this.carObj.id, this.lastRaceTime);\n\n                return;\n            }\n\n            void useRaceApi().updateWinner(\n                this.carObj.id,\n                this.lastRaceTime < data.time ? this.lastRaceTime : data.time,\n                data.wins + 1,\n            );\n        });\n        this.winText.getNode().textContent = `${this.carObj.name} win for ${this.lastRaceTime / 1000} sec!`;\n    }\n\n    stop(callback?: () => void) {\n        this.winText.getNode().textContent = '';\n\n        if (this.animationInterval) {\n            clearInterval(this.animationInterval);\n        }\n\n        useRaceApi().engineStop(this.id, (data) => {\n            this.startButton.getNode().textContent = 'start';\n            this.driveButton.getNode().disabled = true;\n            this.raceCounter += 1;\n            this.engineStats = data;\n            this.engineStarted = false;\n            this.trackCar?.getNode().style.setProperty('left', '0');\n        });\n        callback?.();\n    }\n\n    setCar(car: ICarModel) {\n        this.carObj = car;\n        this.render();\n    }\n\n    start(callback?: () => void) {\n        useRaceApi().engineStart(this.id, (data) => {\n            this.startButton.getNode().textContent = 'stop';\n            this.driveButton.getNode().disabled = false;\n            this.engineStats = data;\n            this.engineStarted = true;\n            this.trackCar?.getNode().style.setProperty('left', '0');\n\n            callback?.();\n        });\n    }\n\n    drive(callback?: (success: boolean) => void) {\n        const currRace = this.raceCounter;\n        const drivePerPeriod = this.engineStats!.velocity * 90;\n        const totalDistance = this.engineStats!.distance;\n        const timeStartTime = Date.now();\n\n        let letToGo = this.engineStats!.distance;\n\n        this.driveButton.getNode().disabled = true;\n        this.animationInterval = setInterval(() => {\n            const node = this.trackCar!.getNode();\n\n            const totalWidth = this.getNode().clientWidth;\n\n            letToGo -= drivePerPeriod;\n\n            if (drivePerPeriod > letToGo) {\n                if (this.animationInterval) {\n                    clearInterval(this.animationInterval);\n                }\n\n                letToGo = 0;\n            }\n\n            node.style.setProperty(\n                'left',\n                `${(totalWidth - 40) * ((totalDistance - letToGo) / totalDistance)}px`,\n            );\n        }, 100);\n\n        useRaceApi().engineDrive(this.id, (data) => {\n            const time = Date.now() - timeStartTime;\n\n            if (!this.engineStarted && currRace !== this.raceCounter) {\n                return;\n            }\n\n            if (data.success === false) {\n                if (this.animationInterval) {\n                    clearInterval(this.animationInterval);\n                }\n            } else {\n                this.lastRaceTime = time;\n            }\n\n            callback?.(data.success);\n        });\n    }\n}\n\nconst carComponent: FunctionComponent<\n    HTMLDivElement,\n    { carObj: ICarModel; editComponent: CarSettingComponent },\n    CarComponent\n> = ({ classList, carObj, editComponent, ...props }) => {\n    return new CarComponent(carObj, editComponent, {\n        classList: mergeClassLists(style['car'], classList),\n        ...props,\n    }).render();\n};\n\nexport default carComponent;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport MergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from './loader.module.scss';\n\nconst loaderComponent: FunctionComponent = ({ classList, ...props }) => {\n    return createComponent<HTMLElement>({\n        tag: 'div',\n        classList: MergeClassLists(style['loader'], classList),\n        ...props,\n    });\n};\n\nexport default loaderComponent;\n","import createComponent from '@components/baseComponent';\n\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport carSettingComponent from '@components/carSetting/carSettingComponent';\nimport { useRaceApi } from '@services/api.ts';\nimport carComponent, { CarComponent } from '@components/Car/carComponent';\nimport loaderComponent from '@components/loader/loaderComponent';\n\nimport style from './startPageContent.module.scss';\n\nconst startPageContent: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    let page = 1;\n\n    let totalItems = 0;\n\n    const limit = 7;\n\n    let raceWinner: CarComponent | null = null;\n\n    let racePage = page;\n\n    const carsComponent = createComponent({\n        tag: 'div',\n        classList: style['garage__cars'],\n    });\n\n    const carEditComponent = carSettingComponent({\n        edit: true,\n    });\n\n    const stopAllCars = () => {\n        if (\n            !carsComponent.getChildren().some((item) => {\n                if (item instanceof CarComponent) {\n                    return item.engineIsStarted();\n                }\n\n                return false;\n            })\n        ) {\n            return;\n        }\n\n        carsComponent.getChildren().forEach((child) => {\n            if (child instanceof CarComponent) {\n                child.stop();\n                raceWinner = null;\n            }\n        });\n    };\n\n    const goToPage = (newPage: number) => {\n        racePage = page;\n        page = newPage;\n\n        carsComponent.getChildren().forEach((child) => child.remove());\n        const loader = loaderComponent({});\n\n        carsComponent.append(loader);\n        void useRaceApi().getCars(page, limit, (data, headers) => {\n            stopAllCars();\n            carsComponent.getChildren().forEach((child) => {\n                child.destroy();\n            });\n            totalItems = parseInt(headers.get('X-Total-Count') ?? '0', 10);\n            carsComponent.append(\n                createComponent({\n                    tag: 'h2',\n                    classList: style['garage__title'],\n                    textContent: `Garage (${totalItems})`,\n                }),\n            );\n            data.forEach((car) => {\n                carsComponent.append(\n                    carComponent({\n                        carObj: car,\n                        editComponent: carEditComponent,\n                    }),\n                );\n            });\n        });\n    };\n\n    const controlBlock = createComponent<HTMLDivElement>({\n        tag: 'div',\n        classList: style['garage__control'],\n        children: [\n            carSettingComponent({\n                edit: false,\n                update: () => {\n                    goToPage(page);\n                },\n            }),\n            carEditComponent,\n        ],\n    });\n\n    const controlButtons = createComponent<HTMLDivElement>({\n        tag: 'div',\n        classList: style['garage__control'],\n        children: [\n            createComponent({\n                tag: 'button',\n                classList: style['garage__control-button'],\n                textContent: 'generate 100 cars',\n            }).addEventListener('click', () => {\n                void useRaceApi().generateCars(100, () => {\n                    goToPage(page);\n                });\n            }),\n            createComponent({\n                tag: 'button',\n                classList: style['garage__control-button'],\n                textContent: 'Reset garage',\n            }).addEventListener('click', stopAllCars),\n            createComponent({\n                tag: 'button',\n                classList: style['garage__control-button'],\n                textContent: 'Race',\n            }).addEventListener('click', () => {\n                carsComponent.getChildren().forEach((child) => {\n                    if (\n                        child instanceof CarComponent &&\n                        carsComponent.getChildren().every((item) => {\n                            if (item instanceof CarComponent) {\n                                return !item.engineIsStarted();\n                            }\n\n                            return !(item instanceof CarComponent);\n                        })\n                    ) {\n                        racePage = page;\n                        child.start(() => {\n                            child.drive((success) => {\n                                if (!raceWinner && success && racePage === page) {\n                                    child.win();\n                                    raceWinner = child;\n                                }\n                            });\n                        });\n                    }\n                });\n            }),\n        ],\n    });\n\n    const currPage = createComponent({\n        tag: 'span',\n        classList: style['garage__curr-page'],\n        textContent: `Page ${page}`,\n    });\n\n    const pagination = createComponent({\n        tag: 'div',\n        classList: style['garage__pagination'],\n        children: [\n            createComponent({\n                tag: 'button',\n                classList: style['garage__pagination-button'],\n                textContent: 'prev',\n            }).addEventListener('click', () => {\n                if (page === 1) {\n                    return;\n                }\n\n                goToPage(page - 1);\n                currPage.getNode().textContent = `Page ${page}`;\n            }),\n            currPage,\n            createComponent({\n                tag: 'button',\n                classList: style['garage__pagination-button'],\n                textContent: 'next',\n            }).addEventListener('click', () => {\n                if (totalItems / limit <= page) {\n                    return;\n                }\n\n                goToPage(page + 1);\n                currPage.getNode().textContent = `Page ${page}`;\n            }),\n        ],\n    });\n\n    const content = createComponent<HTMLDivElement>({\n        tag: 'div',\n        classList: style['garage__content'],\n        children: [controlBlock, controlButtons, carsComponent, pagination],\n    });\n\n    return createComponent({\n        tag: 'main',\n        classList: mergeClassLists(style['garage'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    }).componentDidMount(() => {\n        goToPage(page);\n    });\n};\n\nexport default startPageContent;\n","import header from '@viewsComponents/header/header';\nimport footer from '@viewsComponents/footer/footer';\nimport createComponent from '@components/baseComponent';\nimport startPageContent from '@viewsComponents/startPageContent/startPageContent';\n\nconst startPageView = () => {\n    return createComponent<HTMLTemplateElement>({\n        tag: 'template',\n        children: [header({}), startPageContent({}), footer({})],\n    });\n};\n\nexport default startPageView;\n","import createComponent from '@components/baseComponent';\n\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\n\nimport { useRaceApi } from '@services/api';\n\nimport loaderComponent from '@components/loader/loaderComponent';\n\nimport carImageComponent from '@components/carImage/carImageComponent';\nimport style from './winnersPageContent.module.scss';\n\nconst winnersPageContent: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    let page = 1;\n\n    let totalItems = 0;\n\n    const limit = 10;\n\n    let order: 'DESC' | 'ASC' = 'DESC';\n\n    let sort: 'wins' | 'time' = 'wins';\n\n    const winnersComponent = createComponent({\n        tag: 'div',\n        classList: style['winners__table'],\n    });\n\n    const goToPage = (newPage: number) => {\n        page = newPage;\n\n        winnersComponent.getChildren().forEach((child) => child.remove());\n        const loader = loaderComponent({});\n\n        winnersComponent.append(loader);\n        void useRaceApi().getWinners({\n            page,\n            limit,\n            sort,\n            order,\n            callback: (data, headers) => {\n                winnersComponent.getChildren().forEach((child) => {\n                    child.destroy();\n                });\n                totalItems = parseInt(headers.get('X-Total-Count') ?? '0', 10);\n                winnersComponent.append(\n                    createComponent({\n                        tag: 'h2',\n                        classList: style['winners__title'],\n                        textContent: `Winners (${totalItems})`,\n                    }),\n                );\n                winnersComponent.append(\n                    createComponent({\n                        tag: 'div',\n                        classList: style['winners__table-row'],\n                        children: [\n                            createComponent({\n                                tag: 'span',\n                                classList: style['winners__title'],\n                                textContent: `id`,\n                            }),\n                            createComponent({\n                                tag: 'span',\n                                classList: style['winners__title'],\n                                textContent: `name`,\n                            }),\n                            createComponent({\n                                tag: 'span',\n                                classList: style['winners__title'],\n                                textContent: `car`,\n                            }),\n                            createComponent({\n                                tag: 'div',\n                                classList: style['winners__title'],\n                                children: [\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__title'],\n                                        textContent: `time`,\n                                        children: [],\n                                    }),\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__title'],\n                                        textContent: `(SORT)`,\n                                        children: [],\n                                    }).addEventListener('click', () => {\n                                        sort = 'time';\n                                        order = order === 'ASC' ? 'DESC' : 'ASC';\n                                        goToPage(page);\n                                    }),\n                                ],\n                            }),\n                            createComponent({\n                                tag: 'div',\n                                classList: style['winners__title'],\n                                children: [\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__title'],\n                                        textContent: `wins`,\n                                        children: [],\n                                    }),\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__title'],\n                                        textContent: `(SORT)`,\n                                        children: [],\n                                    }).addEventListener('click', () => {\n                                        sort = 'wins';\n                                        order = order === 'ASC' ? 'DESC' : 'ASC';\n                                        goToPage(page);\n                                    }),\n                                ],\n                            }),\n                        ],\n                    }),\n                );\n                data.forEach((winner) => {\n                    void useRaceApi().getCar(winner.id, (car) => {\n                        winnersComponent.append(\n                            createComponent({\n                                tag: 'div',\n                                classList: style['winners__table-row'],\n                                children: [\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__title'],\n                                        textContent: String(car.id),\n                                    }),\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__winner-title'],\n                                        textContent: `${car.name}`,\n                                    }),\n                                    carImageComponent({\n                                        carObj: car,\n                                        classList: style['winners__winner-img'],\n                                    }),\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__winner-title'],\n                                        textContent: `${winner.time / 1000} sec`,\n                                    }),\n                                    createComponent({\n                                        tag: 'span',\n                                        classList: style['winners__winner-name'],\n                                        textContent: `${winner.wins} wins`,\n                                    }),\n                                ],\n                            }),\n                        );\n                    });\n                });\n            },\n        });\n    };\n\n    const currPage = createComponent({\n        tag: 'span',\n        classList: style['winners__curr-page'],\n        textContent: `Page ${page}`,\n    });\n\n    const pagination = createComponent({\n        tag: 'div',\n        classList: style['winners__pagination'],\n        children: [\n            createComponent({\n                tag: 'button',\n                classList: style['winners__pagination-button'],\n                textContent: 'prev',\n            }).addEventListener('click', () => {\n                if (page === 1) {\n                    return;\n                }\n\n                goToPage(page - 1);\n                currPage.getNode().textContent = `Page ${page}`;\n            }),\n            currPage,\n            createComponent({\n                tag: 'button',\n                classList: style['winners__pagination-button'],\n                textContent: 'next',\n            }).addEventListener('click', () => {\n                if (totalItems / limit <= page + 1) {\n                    return;\n                }\n\n                goToPage(page + 1);\n                currPage.getNode().textContent = `Page ${page}`;\n            }),\n        ],\n    });\n\n    const content = createComponent<HTMLDivElement>({\n        tag: 'div',\n        classList: style['winners__content'],\n        children: [winnersComponent, pagination],\n    });\n\n    const main = createComponent({\n        tag: 'main',\n        classList: mergeClassLists(style['winners'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    }).componentDidMount(() => {\n        goToPage(page);\n    });\n\n    main.onRoute = () => {\n        goToPage(page);\n    };\n\n    return main;\n};\n\nexport default winnersPageContent;\n","import createComponent from '@components/baseComponent';\nimport header from '@viewsComponents/header/header';\nimport footer from '@viewsComponents/footer/footer';\nimport winnersPageContent from '@viewsComponents/winnersPageContent/winnersPageContent';\n\nconst winnerPage = () => {\n    return createComponent<HTMLTemplateElement>({\n        tag: 'template',\n        children: [header({}), winnersPageContent({}), footer({})],\n    });\n};\n\nexport default winnerPage;\n","import startPageView from '@views/startPage';\nimport { FunctionComponent } from '@components/baseComponent';\nimport winnerPage from '@views/winnerPage.ts';\n\nexport interface IRouteParams {\n    [key: string]: string | boolean | number | undefined | null;\n    difficulty?: number;\n    level?: number;\n    reg?: boolean;\n    page?: number;\n}\n\nexport interface IRoute {\n    name: string;\n    path: string;\n    view: FunctionComponent<HTMLTemplateElement>;\n    needAuth: boolean;\n    params: IRouteParams;\n}\n\nexport interface IRoutes {\n    [key: string]: IRoute;\n    startPage: IRoute;\n    winners: IRoute;\n}\n\nconst Routes: IRoutes = {\n    startPage: {\n        name: 'startPage',\n        path: '/fymg-JSFE2023Q4/',\n        view: startPageView,\n        needAuth: false,\n        params: { page: undefined },\n    },\n    winners: {\n        name: 'winners',\n        path: '/fymg-JSFE2023Q4/winners',\n        view: winnerPage,\n        needAuth: false,\n        params: {\n            difficulty: undefined,\n            level: undefined,\n        },\n    },\n};\n\nexport default Routes;\n","import Routes, { IRoute } from '@utils/consts/routes';\n\nexport default function getRouteByPath(path: string) {\n    return Object.keys(Routes).reduce(\n        (acc: IRoute | undefined, routeName): IRoute | undefined => {\n            if (Routes[routeName]?.path === path) {\n                return Routes[routeName];\n            }\n\n            return acc;\n        },\n        undefined,\n    );\n}\n","import createComponent, { BaseComponent } from '@components/baseComponent.ts';\nimport { IRoute, IRouteParams } from '@utils/consts/routes';\nimport throwError from '@utils/helpers/throwError';\nimport getRouteByPath from '@utils/helpers/getRouteByPath';\n\nclass Router {\n    private static instance: Router;\n\n    static create(rootComponent?: BaseComponent, defaultRoute?: IRoute): Router {\n        if (Router.instance) {\n            throwError('Router already created');\n        }\n\n        Router.instance = new Router(rootComponent, defaultRoute);\n\n        return Router.instance;\n    }\n\n    static getIsInitialized() {\n        return !!Router.instance;\n    }\n\n    public static initialLoad() {\n        const load = () => {\n            const redirectUrl = window.location.href.split('/?/')[1];\n\n            let url = new URL(window.location.href.toString());\n\n            if (redirectUrl) {\n                url = new URL(\n                    `${window.location.pathname}${redirectUrl}`,\n                    window.location.origin + window.location.pathname,\n                );\n            }\n\n            const route = url.pathname;\n\n            const paramsObj: Record<string, string> = {};\n\n            new URLSearchParams(url.search).forEach((value, key) => {\n                paramsObj[key] = value;\n            });\n            Router.instance.route(route, paramsObj, false);\n        };\n\n        window.addEventListener('popstate', () => {\n            load();\n        });\n\n        load();\n    }\n\n    static getInstance() {\n        return Router.instance;\n    }\n\n    private root: BaseComponent;\n\n    private readonly defaultRoute: IRoute | undefined;\n\n    private states: Record<string, BaseComponent<HTMLTemplateElement>> = {};\n\n    private prevRoute = '';\n\n    private constructor(rootComponent?: BaseComponent, defaultRoute?: IRoute) {\n        this.root = this.createOrGetRoot(rootComponent);\n        this.defaultRoute = defaultRoute;\n    }\n\n    private createOrGetRoot(rootComponent?: BaseComponent) {\n        if (!this.root) {\n            if (rootComponent) {\n                this.root = rootComponent;\n            } else {\n                this.root = createComponent({\n                    tag: 'div',\n                    id: 'root',\n                });\n                document.body.append(this.root.getNode());\n            }\n        }\n\n        return this.root;\n    }\n\n    getRoot() {\n        return this.root;\n    }\n\n    public route(\n        toRoute: string | IRoute | undefined,\n        params?: IRouteParams,\n        pushState = true,\n    ) {\n        let route = typeof toRoute === 'string' ? getRouteByPath(toRoute) : toRoute;\n\n        if (!route && !this.defaultRoute) {\n            throwError('Route never exist and default route is not set');\n        }\n\n        if (!route && this.defaultRoute) {\n            route = this.defaultRoute;\n        }\n\n        if (route) {\n            const url = new URL(window.location.href);\n\n            url.searchParams.forEach((_, key) => url.searchParams.delete(key));\n\n            if (params) {\n                Object.entries(params).forEach(([key, value]) => {\n                    if (value !== null) {\n                        url.searchParams.set(key, String(value));\n                    }\n                });\n            }\n\n            url.pathname = route.path;\n\n            let routeViewComponent = route.view({});\n\n            this.states[this.prevRoute]?.appendChildren(this.root.getChildren());\n\n            if (this.states[route.path]) {\n                routeViewComponent = this.states[route.path]!;\n                routeViewComponent.getChildren().forEach((item) => item.onRoute());\n            } else {\n                this.states[route.path] = routeViewComponent;\n            }\n\n            this.root.getChildren().forEach((child) => child.remove());\n            this.root.appendChildren(routeViewComponent.getChildren());\n            this.prevRoute = route.path;\n\n            if (pushState) {\n                window.history.pushState({}, '', url);\n            }\n        }\n    }\n\n    getRouteInfo() {\n        const route = getRouteByPath(window.location.pathname)!;\n\n        const routeCopy = JSON.parse(JSON.stringify(route)) as typeof route;\n\n        routeCopy.params = {};\n\n        if (!route) {\n            throwError('Route not found');\n        }\n\n        const urlParams = new URLSearchParams(window.location.search);\n\n        Object.keys(route.params ?? {}).forEach((param) => {\n            if (routeCopy.params) {\n                if (typeof urlParams.get(param) === 'string') {\n                    routeCopy.params[param] = JSON.parse(String(urlParams.get(param))) as\n                        | string\n                        | number\n                        | boolean\n                        | undefined;\n                } else {\n                    routeCopy.params[param] = urlParams.get(param);\n                }\n            }\n        });\n\n        return routeCopy;\n    }\n}\n\nexport const useRouter = () => {\n    if (!Router.getInstance()) {\n        throwError('Router not created');\n    }\n\n    const router = Router.getInstance();\n\n    return {\n        root: router.getRoot(),\n        route: router.route.bind(router),\n        routeInfo: router.getRouteInfo.bind(router),\n        isInitialized: Router.getIsInitialized(),\n    };\n};\n\nexport const createRouter = (root?: BaseComponent, defaultRoute?: IRoute) => {\n    Router.create(root, defaultRoute);\n    Router.initialLoad();\n\n    return useRouter();\n};\n","import 'normalize.css';\nimport '@styles/index.scss';\nimport { createRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport { createRaceApiProvider } from '@services/api.ts';\n\ncreateRouter(undefined, Routes.startPage);\ncreateRaceApiProvider();\n"],"names":["removeDuplicates","arr","item","index","BaseComponent","props","__publicField","_a","_b","tag","style","classList","textContent","children","__objRest","__spreadValues","node","key","value","stringValue","child","addedNode","type","listener","options","classNameClassName","classSurname","className","result","component","callback","resolve","_","obs","err","createComponent","throwError","message","logo","TextStrings","mergeClassLists","classLists","mergeChildrenLists","logoComponent","logoImg","logoText","buttonComponent","header","route","routeInfo","useRouter","Routes","winners","content","footer","carBrands","_RaceApi","baseUrl","endpoint","urlParams","headers","errorCallback","body","res","urlOptions","url","method","data","ResponseHeaders","name","color","reject","page","limit","id","time","sort","order","wins","count","cars","i","carModels","RaceApi","useRaceApi","raceApi","createRaceApiProvider","CarSettingComponent","colorComponent","nameComponent","car","carComponent","carSettingComponent","edit","update","flagImg","carSvg","carImageComponent","carObj","MergeClassLists","carBody","CarComponent","editComponent","carControlBlock","trackControlBlock","trackEnd","track","currRace","drivePerPeriod","totalDistance","timeStartTime","letToGo","totalWidth","loaderComponent","startPageContent","totalItems","raceWinner","racePage","carsComponent","carEditComponent","stopAllCars","goToPage","newPage","loader","controlBlock","controlButtons","success","currPage","pagination","startPageView","winnersPageContent","winnersComponent","winner","main","winnerPage","getRouteByPath","path","acc","routeName","_Router","rootComponent","defaultRoute","load","redirectUrl","paramsObj","toRoute","params","pushState","routeViewComponent","routeCopy","param","Router","router","createRouter","root"],"mappings":"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"}